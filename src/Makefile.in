# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
AUTOMAKE_OPTIONS = 1.6

include_HEADERS = CLucene.h

lsrcdir = $(top_srcdir)/src/CLucene

lib_LTLIBRARIES = libclucene.la 

libclucene_la_SOURCES = $(analyzersdir)/Analyzers.cpp  $(stdandir)/StandardAnalyzer.cpp  $(stdandir)/StandardFilter.cpp $(stdandir)/StandardTokenizer.cpp $(debugdir)/condition.c  $(documentdir)/DateField.cpp $(documentdir)/Document.cpp $(documentdir)/Field.cpp $(indexdir)/DocumentWriter.cpp   $(indexdir)/SegmentMergeInfo.cpp $(indexdir)/SegmentsReader.cpp $(indexdir)/FieldInfos.cpp $(indexdir)/SegmentMergeQueue.cpp $(indexdir)/Term.cpp $(indexdir)/FieldsReader.cpp $(indexdir)/SegmentMerger.cpp $(indexdir)/TermInfo.cpp $(indexdir)/FieldsWriter.cpp $(indexdir)/SegmentReader.cpp $(indexdir)/TermInfosReader.cpp $(indexdir)/IndexReader.cpp $(indexdir)/SegmentTermDocs.cpp $(indexdir)/TermInfosWriter.cpp $(indexdir)/IndexWriter.cpp $(indexdir)/SegmentTermEnum.cpp $(indexdir)/SegmentInfos.cpp $(indexdir)/SegmentTermPositions.cpp $(qpdir)/Lexer.cpp $(qpdir)/QueryParser.cpp $(qpdir)/QueryParserBase.cpp $(qpdir)/QueryToken.cpp $(qpdir)/TokenList.cpp $(qpdir)/MultiFieldQueryParser.cpp $(searchdir)/BooleanQuery.cpp $(searchdir)/IndexSearcher.cpp $(searchdir)/Similarity.cpp $(searchdir)/BooleanScorer.cpp $(searchdir)/MultiTermQuery.cpp $(searchdir)/SloppyPhraseScorer.cpp $(searchdir)/DateFilter.cpp $(searchdir)/PhrasePositions.cpp $(searchdir)/TermQuery.cpp $(searchdir)/ExactPhraseScorer.cpp $(searchdir)/PhraseQuery.cpp $(searchdir)/TermScorer.cpp $(searchdir)/FilteredTermEnum.cpp $(searchdir)/PhraseScorer.cpp $(searchdir)/TopDocs.cpp $(searchdir)/HitQueue.cpp $(searchdir)/PrefixQuery.cpp $(searchdir)/WildcardQuery.cpp $(searchdir)/Hits.cpp $(searchdir)/RangeQuery.cpp $(searchdir)/WildcardTermEnum.cpp $(searchdir)/FuzzyQuery.cpp $(searchdir)/MultiSearcher.cpp $(storedir)/FSDirectory.cpp $(storedir)/InputStream.cpp $(storedir)/Lock.cpp $(storedir)/OutputStream.cpp $(storedir)/RAMDirectory.cpp $(storedir)/TransactionalRAMDirectory.cpp $(utildir)/Arrays.cpp $(utildir)/FastCharStream.cpp $(utildir)/Reader.cpp $(utildir)/BitVector.cpp $(utildir)/Misc.cpp $(utildir)/StringBuffer.cpp $(utf8src)  $(lsrcdir)/StdHeader.cpp
analyzersdir = $(lsrcdir)/analysis
anhdir = $(includedir)/CLucene/analysis

anh_HEADERS = $(analyzersdir)/*.h
stdandir = $(lsrcdir)/analysis/standard
stdanhdir = $(includedir)/CLucene/analysis/standard
stdanh_HEADERS = $(stdandir)/*.h
debugdir = $(lsrcdir)/debug
debughdir = $(includedir)/CLucene/debug

debugh_HEADERS = $(debugdir)/*.h
documentdir = $(lsrcdir)/document
dochdir = $(includedir)/CLucene/document

doch_HEADERS = $(documentdir)/*.h
indexdir = $(lsrcdir)/index
indexhdir = $(includedir)/CLucene/index

indexh_HEADERS = $(indexdir)/*.h
qpdir = $(lsrcdir)/queryParser
qphdir = $(includedir)/CLucene/queryParser

qph_HEADERS = $(qpdir)/*.h
searchdir = $(lsrcdir)/search
searchhdir = $(includedir)/CLucene/search

searchh_HEADERS = $(searchdir)/*.h
storedir = $(lsrcdir)/store
storehdir = $(includedir)/CLucene/store

storeh_HEADERS = $(storedir)/*.h
utildir = $(lsrcdir)/util
utilhdir = $(includedir)/CLucene/util

utilh_HEADERS = $(utildir)/*.h
stdhdir = $(includedir)/CLucene

@USEUTF8_TRUE@utf8src = $(lsrcdir)/LuceneUTF8.cpp
@USEUTF8_FALSE@utf8src = 
stdh_HEADERS = $(lsrcdir)/*.h $(top_builddir)/config.h
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/./build/gcc/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libclucene_la_LDFLAGS =
libclucene_la_LIBADD =
@USEUTF8_TRUE@am__objects_1 = LuceneUTF8.lo
@USEUTF8_FALSE@am__objects_1 =
am_libclucene_la_OBJECTS = Analyzers.lo StandardAnalyzer.lo \
	StandardFilter.lo StandardTokenizer.lo condition.lo \
	DateField.lo Document.lo Field.lo DocumentWriter.lo \
	SegmentMergeInfo.lo SegmentsReader.lo FieldInfos.lo \
	SegmentMergeQueue.lo Term.lo FieldsReader.lo SegmentMerger.lo \
	TermInfo.lo FieldsWriter.lo SegmentReader.lo TermInfosReader.lo \
	IndexReader.lo SegmentTermDocs.lo TermInfosWriter.lo \
	IndexWriter.lo SegmentTermEnum.lo SegmentInfos.lo \
	SegmentTermPositions.lo Lexer.lo QueryParser.lo \
	QueryParserBase.lo QueryToken.lo TokenList.lo \
	MultiFieldQueryParser.lo BooleanQuery.lo IndexSearcher.lo \
	Similarity.lo BooleanScorer.lo MultiTermQuery.lo \
	SloppyPhraseScorer.lo DateFilter.lo PhrasePositions.lo \
	TermQuery.lo ExactPhraseScorer.lo PhraseQuery.lo TermScorer.lo \
	FilteredTermEnum.lo PhraseScorer.lo TopDocs.lo HitQueue.lo \
	PrefixQuery.lo WildcardQuery.lo Hits.lo RangeQuery.lo \
	WildcardTermEnum.lo FuzzyQuery.lo MultiSearcher.lo \
	FSDirectory.lo InputStream.lo Lock.lo OutputStream.lo \
	RAMDirectory.lo TransactionalRAMDirectory.lo Arrays.lo \
	FastCharStream.lo Reader.lo BitVector.lo Misc.lo \
	StringBuffer.lo $(am__objects_1) StdHeader.lo
libclucene_la_OBJECTS = $(am_libclucene_la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/./build/gcc/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Analyzers.Plo ./$(DEPDIR)/Arrays.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BitVector.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BooleanQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BooleanScorer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DateField.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DateFilter.Plo ./$(DEPDIR)/Document.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DocumentWriter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ExactPhraseScorer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FSDirectory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FastCharStream.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Field.Plo ./$(DEPDIR)/FieldInfos.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FieldsReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FieldsWriter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FilteredTermEnum.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/FuzzyQuery.Plo ./$(DEPDIR)/HitQueue.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Hits.Plo ./$(DEPDIR)/IndexReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/IndexSearcher.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/IndexWriter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/InputStream.Plo ./$(DEPDIR)/Lexer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Lock.Plo ./$(DEPDIR)/LuceneUTF8.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Misc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MultiFieldQueryParser.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MultiSearcher.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MultiTermQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/OutputStream.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PhrasePositions.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PhraseQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PhraseScorer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PrefixQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/QueryParser.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/QueryParserBase.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/QueryToken.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/RAMDirectory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/RangeQuery.Plo ./$(DEPDIR)/Reader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentInfos.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentMergeInfo.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentMergeQueue.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentMerger.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentTermDocs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentTermEnum.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentTermPositions.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SegmentsReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Similarity.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SloppyPhraseScorer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StandardAnalyzer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StandardFilter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StandardTokenizer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StdHeader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StringBuffer.Plo ./$(DEPDIR)/Term.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TermInfo.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TermInfosReader.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TermInfosWriter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TermQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TermScorer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TokenList.Plo ./$(DEPDIR)/TopDocs.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/TransactionalRAMDirectory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/WildcardQuery.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/WildcardTermEnum.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/condition.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libclucene_la_SOURCES)
HEADERS = $(anh_HEADERS) $(debugh_HEADERS) $(doch_HEADERS) \
	$(include_HEADERS) $(indexh_HEADERS) $(qph_HEADERS) \
	$(searchh_HEADERS) $(stdanh_HEADERS) $(stdh_HEADERS) \
	$(storeh_HEADERS) $(utilh_HEADERS)

DIST_COMMON = $(anh_HEADERS) $(debugh_HEADERS) $(doch_HEADERS) \
	$(include_HEADERS) $(indexh_HEADERS) $(qph_HEADERS) \
	$(searchh_HEADERS) $(stdanh_HEADERS) $(stdh_HEADERS) \
	$(storeh_HEADERS) $(utilh_HEADERS) Makefile.am Makefile.in
SOURCES = $(libclucene_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am $(srcdir)/CLucene/analysis/Makefile.am $(srcdir)/CLucene/analysis/standard/Makefile.am $(srcdir)/CLucene/debug/Makefile.am $(srcdir)/CLucene/document/Makefile.am $(srcdir)/CLucene/index/Makefile.am $(srcdir)/CLucene/queryParser/Makefile.am $(srcdir)/CLucene/search/Makefile.am $(srcdir)/CLucene/store/Makefile.am $(srcdir)/CLucene/util/Makefile.am $(srcdir)/CLucene/Makefile.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
Analyzers.lo: $(analyzersdir)/Analyzers.cpp
StandardAnalyzer.lo: $(stdandir)/StandardAnalyzer.cpp
StandardFilter.lo: $(stdandir)/StandardFilter.cpp
StandardTokenizer.lo: $(stdandir)/StandardTokenizer.cpp
condition.lo: $(debugdir)/condition.c
DateField.lo: $(documentdir)/DateField.cpp
Document.lo: $(documentdir)/Document.cpp
Field.lo: $(documentdir)/Field.cpp
DocumentWriter.lo: $(indexdir)/DocumentWriter.cpp
SegmentMergeInfo.lo: $(indexdir)/SegmentMergeInfo.cpp
SegmentsReader.lo: $(indexdir)/SegmentsReader.cpp
FieldInfos.lo: $(indexdir)/FieldInfos.cpp
SegmentMergeQueue.lo: $(indexdir)/SegmentMergeQueue.cpp
Term.lo: $(indexdir)/Term.cpp
FieldsReader.lo: $(indexdir)/FieldsReader.cpp
SegmentMerger.lo: $(indexdir)/SegmentMerger.cpp
TermInfo.lo: $(indexdir)/TermInfo.cpp
FieldsWriter.lo: $(indexdir)/FieldsWriter.cpp
SegmentReader.lo: $(indexdir)/SegmentReader.cpp
TermInfosReader.lo: $(indexdir)/TermInfosReader.cpp
IndexReader.lo: $(indexdir)/IndexReader.cpp
SegmentTermDocs.lo: $(indexdir)/SegmentTermDocs.cpp
TermInfosWriter.lo: $(indexdir)/TermInfosWriter.cpp
IndexWriter.lo: $(indexdir)/IndexWriter.cpp
SegmentTermEnum.lo: $(indexdir)/SegmentTermEnum.cpp
SegmentInfos.lo: $(indexdir)/SegmentInfos.cpp
SegmentTermPositions.lo: $(indexdir)/SegmentTermPositions.cpp
Lexer.lo: $(qpdir)/Lexer.cpp
QueryParser.lo: $(qpdir)/QueryParser.cpp
QueryParserBase.lo: $(qpdir)/QueryParserBase.cpp
QueryToken.lo: $(qpdir)/QueryToken.cpp
TokenList.lo: $(qpdir)/TokenList.cpp
MultiFieldQueryParser.lo: $(qpdir)/MultiFieldQueryParser.cpp
BooleanQuery.lo: $(searchdir)/BooleanQuery.cpp
IndexSearcher.lo: $(searchdir)/IndexSearcher.cpp
Similarity.lo: $(searchdir)/Similarity.cpp
BooleanScorer.lo: $(searchdir)/BooleanScorer.cpp
MultiTermQuery.lo: $(searchdir)/MultiTermQuery.cpp
SloppyPhraseScorer.lo: $(searchdir)/SloppyPhraseScorer.cpp
DateFilter.lo: $(searchdir)/DateFilter.cpp
PhrasePositions.lo: $(searchdir)/PhrasePositions.cpp
TermQuery.lo: $(searchdir)/TermQuery.cpp
ExactPhraseScorer.lo: $(searchdir)/ExactPhraseScorer.cpp
PhraseQuery.lo: $(searchdir)/PhraseQuery.cpp
TermScorer.lo: $(searchdir)/TermScorer.cpp
FilteredTermEnum.lo: $(searchdir)/FilteredTermEnum.cpp
PhraseScorer.lo: $(searchdir)/PhraseScorer.cpp
TopDocs.lo: $(searchdir)/TopDocs.cpp
HitQueue.lo: $(searchdir)/HitQueue.cpp
PrefixQuery.lo: $(searchdir)/PrefixQuery.cpp
WildcardQuery.lo: $(searchdir)/WildcardQuery.cpp
Hits.lo: $(searchdir)/Hits.cpp
RangeQuery.lo: $(searchdir)/RangeQuery.cpp
WildcardTermEnum.lo: $(searchdir)/WildcardTermEnum.cpp
FuzzyQuery.lo: $(searchdir)/FuzzyQuery.cpp
MultiSearcher.lo: $(searchdir)/MultiSearcher.cpp
FSDirectory.lo: $(storedir)/FSDirectory.cpp
InputStream.lo: $(storedir)/InputStream.cpp
Lock.lo: $(storedir)/Lock.cpp
OutputStream.lo: $(storedir)/OutputStream.cpp
RAMDirectory.lo: $(storedir)/RAMDirectory.cpp
TransactionalRAMDirectory.lo: $(storedir)/TransactionalRAMDirectory.cpp
Arrays.lo: $(utildir)/Arrays.cpp
FastCharStream.lo: $(utildir)/FastCharStream.cpp
Reader.lo: $(utildir)/Reader.cpp
BitVector.lo: $(utildir)/BitVector.cpp
Misc.lo: $(utildir)/Misc.cpp
StringBuffer.lo: $(utildir)/StringBuffer.cpp
LuceneUTF8.lo: $(lsrcdir)/LuceneUTF8.cpp
StdHeader.lo: $(lsrcdir)/StdHeader.cpp
libclucene.la: $(libclucene_la_OBJECTS) $(libclucene_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libclucene_la_LDFLAGS) $(libclucene_la_OBJECTS) $(libclucene_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Analyzers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Arrays.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BooleanQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BooleanScorer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DateField.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DateFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Document.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DocumentWriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExactPhraseScorer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FSDirectory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FastCharStream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Field.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FieldInfos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FieldsReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FieldsWriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilteredTermEnum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FuzzyQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HitQueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Hits.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IndexReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IndexSearcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IndexWriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputStream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Lock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LuceneUTF8.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Misc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiFieldQueryParser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiSearcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiTermQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OutputStream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhrasePositions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseScorer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrefixQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueryParser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueryParserBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QueryToken.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RAMDirectory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RangeQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Reader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentInfos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentMergeInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentMergeQueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentMerger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentTermDocs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentTermEnum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentTermPositions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SegmentsReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Similarity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SloppyPhraseScorer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StandardAnalyzer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StandardFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StandardTokenizer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StdHeader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StringBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Term.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TermInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TermInfosReader.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TermInfosWriter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TermQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TermScorer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TokenList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TopDocs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TransactionalRAMDirectory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WildcardQuery.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WildcardTermEnum.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/condition.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

condition.o: $(debugdir)/condition.c
@AMDEP_TRUE@	source='$(debugdir)/condition.c' object='condition.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/condition.Po' tmpdepfile='$(DEPDIR)/condition.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o condition.o `test -f '$(debugdir)/condition.c' || echo '$(srcdir)/'`$(debugdir)/condition.c

condition.obj: $(debugdir)/condition.c
@AMDEP_TRUE@	source='$(debugdir)/condition.c' object='condition.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/condition.Po' tmpdepfile='$(DEPDIR)/condition.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o condition.obj `cygpath -w $(debugdir)/condition.c`

condition.lo: $(debugdir)/condition.c
@AMDEP_TRUE@	source='$(debugdir)/condition.c' object='condition.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/condition.Plo' tmpdepfile='$(DEPDIR)/condition.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o condition.lo `test -f '$(debugdir)/condition.c' || echo '$(srcdir)/'`$(debugdir)/condition.c
CCDEPMODE = @CCDEPMODE@

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

Analyzers.o: $(analyzersdir)/Analyzers.cpp
@AMDEP_TRUE@	source='$(analyzersdir)/Analyzers.cpp' object='Analyzers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Analyzers.Po' tmpdepfile='$(DEPDIR)/Analyzers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Analyzers.o `test -f '$(analyzersdir)/Analyzers.cpp' || echo '$(srcdir)/'`$(analyzersdir)/Analyzers.cpp

Analyzers.obj: $(analyzersdir)/Analyzers.cpp
@AMDEP_TRUE@	source='$(analyzersdir)/Analyzers.cpp' object='Analyzers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Analyzers.Po' tmpdepfile='$(DEPDIR)/Analyzers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Analyzers.obj `cygpath -w $(analyzersdir)/Analyzers.cpp`

Analyzers.lo: $(analyzersdir)/Analyzers.cpp
@AMDEP_TRUE@	source='$(analyzersdir)/Analyzers.cpp' object='Analyzers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Analyzers.Plo' tmpdepfile='$(DEPDIR)/Analyzers.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Analyzers.lo `test -f '$(analyzersdir)/Analyzers.cpp' || echo '$(srcdir)/'`$(analyzersdir)/Analyzers.cpp

StandardAnalyzer.o: $(stdandir)/StandardAnalyzer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardAnalyzer.cpp' object='StandardAnalyzer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardAnalyzer.Po' tmpdepfile='$(DEPDIR)/StandardAnalyzer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardAnalyzer.o `test -f '$(stdandir)/StandardAnalyzer.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardAnalyzer.cpp

StandardAnalyzer.obj: $(stdandir)/StandardAnalyzer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardAnalyzer.cpp' object='StandardAnalyzer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardAnalyzer.Po' tmpdepfile='$(DEPDIR)/StandardAnalyzer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardAnalyzer.obj `cygpath -w $(stdandir)/StandardAnalyzer.cpp`

StandardAnalyzer.lo: $(stdandir)/StandardAnalyzer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardAnalyzer.cpp' object='StandardAnalyzer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardAnalyzer.Plo' tmpdepfile='$(DEPDIR)/StandardAnalyzer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardAnalyzer.lo `test -f '$(stdandir)/StandardAnalyzer.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardAnalyzer.cpp

StandardFilter.o: $(stdandir)/StandardFilter.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardFilter.cpp' object='StandardFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardFilter.Po' tmpdepfile='$(DEPDIR)/StandardFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardFilter.o `test -f '$(stdandir)/StandardFilter.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardFilter.cpp

StandardFilter.obj: $(stdandir)/StandardFilter.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardFilter.cpp' object='StandardFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardFilter.Po' tmpdepfile='$(DEPDIR)/StandardFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardFilter.obj `cygpath -w $(stdandir)/StandardFilter.cpp`

StandardFilter.lo: $(stdandir)/StandardFilter.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardFilter.cpp' object='StandardFilter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardFilter.Plo' tmpdepfile='$(DEPDIR)/StandardFilter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardFilter.lo `test -f '$(stdandir)/StandardFilter.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardFilter.cpp

StandardTokenizer.o: $(stdandir)/StandardTokenizer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardTokenizer.cpp' object='StandardTokenizer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardTokenizer.Po' tmpdepfile='$(DEPDIR)/StandardTokenizer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardTokenizer.o `test -f '$(stdandir)/StandardTokenizer.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardTokenizer.cpp

StandardTokenizer.obj: $(stdandir)/StandardTokenizer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardTokenizer.cpp' object='StandardTokenizer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardTokenizer.Po' tmpdepfile='$(DEPDIR)/StandardTokenizer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardTokenizer.obj `cygpath -w $(stdandir)/StandardTokenizer.cpp`

StandardTokenizer.lo: $(stdandir)/StandardTokenizer.cpp
@AMDEP_TRUE@	source='$(stdandir)/StandardTokenizer.cpp' object='StandardTokenizer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StandardTokenizer.Plo' tmpdepfile='$(DEPDIR)/StandardTokenizer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StandardTokenizer.lo `test -f '$(stdandir)/StandardTokenizer.cpp' || echo '$(srcdir)/'`$(stdandir)/StandardTokenizer.cpp

DateField.o: $(documentdir)/DateField.cpp
@AMDEP_TRUE@	source='$(documentdir)/DateField.cpp' object='DateField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateField.Po' tmpdepfile='$(DEPDIR)/DateField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateField.o `test -f '$(documentdir)/DateField.cpp' || echo '$(srcdir)/'`$(documentdir)/DateField.cpp

DateField.obj: $(documentdir)/DateField.cpp
@AMDEP_TRUE@	source='$(documentdir)/DateField.cpp' object='DateField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateField.Po' tmpdepfile='$(DEPDIR)/DateField.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateField.obj `cygpath -w $(documentdir)/DateField.cpp`

DateField.lo: $(documentdir)/DateField.cpp
@AMDEP_TRUE@	source='$(documentdir)/DateField.cpp' object='DateField.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateField.Plo' tmpdepfile='$(DEPDIR)/DateField.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateField.lo `test -f '$(documentdir)/DateField.cpp' || echo '$(srcdir)/'`$(documentdir)/DateField.cpp

Document.o: $(documentdir)/Document.cpp
@AMDEP_TRUE@	source='$(documentdir)/Document.cpp' object='Document.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Document.Po' tmpdepfile='$(DEPDIR)/Document.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Document.o `test -f '$(documentdir)/Document.cpp' || echo '$(srcdir)/'`$(documentdir)/Document.cpp

Document.obj: $(documentdir)/Document.cpp
@AMDEP_TRUE@	source='$(documentdir)/Document.cpp' object='Document.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Document.Po' tmpdepfile='$(DEPDIR)/Document.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Document.obj `cygpath -w $(documentdir)/Document.cpp`

Document.lo: $(documentdir)/Document.cpp
@AMDEP_TRUE@	source='$(documentdir)/Document.cpp' object='Document.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Document.Plo' tmpdepfile='$(DEPDIR)/Document.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Document.lo `test -f '$(documentdir)/Document.cpp' || echo '$(srcdir)/'`$(documentdir)/Document.cpp

Field.o: $(documentdir)/Field.cpp
@AMDEP_TRUE@	source='$(documentdir)/Field.cpp' object='Field.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Field.Po' tmpdepfile='$(DEPDIR)/Field.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Field.o `test -f '$(documentdir)/Field.cpp' || echo '$(srcdir)/'`$(documentdir)/Field.cpp

Field.obj: $(documentdir)/Field.cpp
@AMDEP_TRUE@	source='$(documentdir)/Field.cpp' object='Field.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Field.Po' tmpdepfile='$(DEPDIR)/Field.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Field.obj `cygpath -w $(documentdir)/Field.cpp`

Field.lo: $(documentdir)/Field.cpp
@AMDEP_TRUE@	source='$(documentdir)/Field.cpp' object='Field.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Field.Plo' tmpdepfile='$(DEPDIR)/Field.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Field.lo `test -f '$(documentdir)/Field.cpp' || echo '$(srcdir)/'`$(documentdir)/Field.cpp

DocumentWriter.o: $(indexdir)/DocumentWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/DocumentWriter.cpp' object='DocumentWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DocumentWriter.Po' tmpdepfile='$(DEPDIR)/DocumentWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentWriter.o `test -f '$(indexdir)/DocumentWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/DocumentWriter.cpp

DocumentWriter.obj: $(indexdir)/DocumentWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/DocumentWriter.cpp' object='DocumentWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DocumentWriter.Po' tmpdepfile='$(DEPDIR)/DocumentWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentWriter.obj `cygpath -w $(indexdir)/DocumentWriter.cpp`

DocumentWriter.lo: $(indexdir)/DocumentWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/DocumentWriter.cpp' object='DocumentWriter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DocumentWriter.Plo' tmpdepfile='$(DEPDIR)/DocumentWriter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentWriter.lo `test -f '$(indexdir)/DocumentWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/DocumentWriter.cpp

SegmentMergeInfo.o: $(indexdir)/SegmentMergeInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeInfo.cpp' object='SegmentMergeInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeInfo.Po' tmpdepfile='$(DEPDIR)/SegmentMergeInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeInfo.o `test -f '$(indexdir)/SegmentMergeInfo.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMergeInfo.cpp

SegmentMergeInfo.obj: $(indexdir)/SegmentMergeInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeInfo.cpp' object='SegmentMergeInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeInfo.Po' tmpdepfile='$(DEPDIR)/SegmentMergeInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeInfo.obj `cygpath -w $(indexdir)/SegmentMergeInfo.cpp`

SegmentMergeInfo.lo: $(indexdir)/SegmentMergeInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeInfo.cpp' object='SegmentMergeInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeInfo.Plo' tmpdepfile='$(DEPDIR)/SegmentMergeInfo.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeInfo.lo `test -f '$(indexdir)/SegmentMergeInfo.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMergeInfo.cpp

SegmentsReader.o: $(indexdir)/SegmentsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentsReader.cpp' object='SegmentsReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentsReader.Po' tmpdepfile='$(DEPDIR)/SegmentsReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentsReader.o `test -f '$(indexdir)/SegmentsReader.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentsReader.cpp

SegmentsReader.obj: $(indexdir)/SegmentsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentsReader.cpp' object='SegmentsReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentsReader.Po' tmpdepfile='$(DEPDIR)/SegmentsReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentsReader.obj `cygpath -w $(indexdir)/SegmentsReader.cpp`

SegmentsReader.lo: $(indexdir)/SegmentsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentsReader.cpp' object='SegmentsReader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentsReader.Plo' tmpdepfile='$(DEPDIR)/SegmentsReader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentsReader.lo `test -f '$(indexdir)/SegmentsReader.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentsReader.cpp

FieldInfos.o: $(indexdir)/FieldInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldInfos.cpp' object='FieldInfos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldInfos.Po' tmpdepfile='$(DEPDIR)/FieldInfos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldInfos.o `test -f '$(indexdir)/FieldInfos.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldInfos.cpp

FieldInfos.obj: $(indexdir)/FieldInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldInfos.cpp' object='FieldInfos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldInfos.Po' tmpdepfile='$(DEPDIR)/FieldInfos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldInfos.obj `cygpath -w $(indexdir)/FieldInfos.cpp`

FieldInfos.lo: $(indexdir)/FieldInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldInfos.cpp' object='FieldInfos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldInfos.Plo' tmpdepfile='$(DEPDIR)/FieldInfos.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldInfos.lo `test -f '$(indexdir)/FieldInfos.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldInfos.cpp

SegmentMergeQueue.o: $(indexdir)/SegmentMergeQueue.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeQueue.cpp' object='SegmentMergeQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeQueue.Po' tmpdepfile='$(DEPDIR)/SegmentMergeQueue.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeQueue.o `test -f '$(indexdir)/SegmentMergeQueue.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMergeQueue.cpp

SegmentMergeQueue.obj: $(indexdir)/SegmentMergeQueue.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeQueue.cpp' object='SegmentMergeQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeQueue.Po' tmpdepfile='$(DEPDIR)/SegmentMergeQueue.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeQueue.obj `cygpath -w $(indexdir)/SegmentMergeQueue.cpp`

SegmentMergeQueue.lo: $(indexdir)/SegmentMergeQueue.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMergeQueue.cpp' object='SegmentMergeQueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMergeQueue.Plo' tmpdepfile='$(DEPDIR)/SegmentMergeQueue.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMergeQueue.lo `test -f '$(indexdir)/SegmentMergeQueue.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMergeQueue.cpp

Term.o: $(indexdir)/Term.cpp
@AMDEP_TRUE@	source='$(indexdir)/Term.cpp' object='Term.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Term.Po' tmpdepfile='$(DEPDIR)/Term.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Term.o `test -f '$(indexdir)/Term.cpp' || echo '$(srcdir)/'`$(indexdir)/Term.cpp

Term.obj: $(indexdir)/Term.cpp
@AMDEP_TRUE@	source='$(indexdir)/Term.cpp' object='Term.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Term.Po' tmpdepfile='$(DEPDIR)/Term.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Term.obj `cygpath -w $(indexdir)/Term.cpp`

Term.lo: $(indexdir)/Term.cpp
@AMDEP_TRUE@	source='$(indexdir)/Term.cpp' object='Term.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Term.Plo' tmpdepfile='$(DEPDIR)/Term.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Term.lo `test -f '$(indexdir)/Term.cpp' || echo '$(srcdir)/'`$(indexdir)/Term.cpp

FieldsReader.o: $(indexdir)/FieldsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsReader.cpp' object='FieldsReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsReader.Po' tmpdepfile='$(DEPDIR)/FieldsReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsReader.o `test -f '$(indexdir)/FieldsReader.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldsReader.cpp

FieldsReader.obj: $(indexdir)/FieldsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsReader.cpp' object='FieldsReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsReader.Po' tmpdepfile='$(DEPDIR)/FieldsReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsReader.obj `cygpath -w $(indexdir)/FieldsReader.cpp`

FieldsReader.lo: $(indexdir)/FieldsReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsReader.cpp' object='FieldsReader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsReader.Plo' tmpdepfile='$(DEPDIR)/FieldsReader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsReader.lo `test -f '$(indexdir)/FieldsReader.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldsReader.cpp

SegmentMerger.o: $(indexdir)/SegmentMerger.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMerger.cpp' object='SegmentMerger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMerger.Po' tmpdepfile='$(DEPDIR)/SegmentMerger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMerger.o `test -f '$(indexdir)/SegmentMerger.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMerger.cpp

SegmentMerger.obj: $(indexdir)/SegmentMerger.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMerger.cpp' object='SegmentMerger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMerger.Po' tmpdepfile='$(DEPDIR)/SegmentMerger.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMerger.obj `cygpath -w $(indexdir)/SegmentMerger.cpp`

SegmentMerger.lo: $(indexdir)/SegmentMerger.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentMerger.cpp' object='SegmentMerger.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentMerger.Plo' tmpdepfile='$(DEPDIR)/SegmentMerger.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentMerger.lo `test -f '$(indexdir)/SegmentMerger.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentMerger.cpp

TermInfo.o: $(indexdir)/TermInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfo.cpp' object='TermInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfo.Po' tmpdepfile='$(DEPDIR)/TermInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfo.o `test -f '$(indexdir)/TermInfo.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfo.cpp

TermInfo.obj: $(indexdir)/TermInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfo.cpp' object='TermInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfo.Po' tmpdepfile='$(DEPDIR)/TermInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfo.obj `cygpath -w $(indexdir)/TermInfo.cpp`

TermInfo.lo: $(indexdir)/TermInfo.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfo.cpp' object='TermInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfo.Plo' tmpdepfile='$(DEPDIR)/TermInfo.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfo.lo `test -f '$(indexdir)/TermInfo.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfo.cpp

FieldsWriter.o: $(indexdir)/FieldsWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsWriter.cpp' object='FieldsWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsWriter.Po' tmpdepfile='$(DEPDIR)/FieldsWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsWriter.o `test -f '$(indexdir)/FieldsWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldsWriter.cpp

FieldsWriter.obj: $(indexdir)/FieldsWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsWriter.cpp' object='FieldsWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsWriter.Po' tmpdepfile='$(DEPDIR)/FieldsWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsWriter.obj `cygpath -w $(indexdir)/FieldsWriter.cpp`

FieldsWriter.lo: $(indexdir)/FieldsWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/FieldsWriter.cpp' object='FieldsWriter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FieldsWriter.Plo' tmpdepfile='$(DEPDIR)/FieldsWriter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FieldsWriter.lo `test -f '$(indexdir)/FieldsWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/FieldsWriter.cpp

SegmentReader.o: $(indexdir)/SegmentReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentReader.cpp' object='SegmentReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentReader.Po' tmpdepfile='$(DEPDIR)/SegmentReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentReader.o `test -f '$(indexdir)/SegmentReader.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentReader.cpp

SegmentReader.obj: $(indexdir)/SegmentReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentReader.cpp' object='SegmentReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentReader.Po' tmpdepfile='$(DEPDIR)/SegmentReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentReader.obj `cygpath -w $(indexdir)/SegmentReader.cpp`

SegmentReader.lo: $(indexdir)/SegmentReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentReader.cpp' object='SegmentReader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentReader.Plo' tmpdepfile='$(DEPDIR)/SegmentReader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentReader.lo `test -f '$(indexdir)/SegmentReader.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentReader.cpp

TermInfosReader.o: $(indexdir)/TermInfosReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosReader.cpp' object='TermInfosReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosReader.Po' tmpdepfile='$(DEPDIR)/TermInfosReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosReader.o `test -f '$(indexdir)/TermInfosReader.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfosReader.cpp

TermInfosReader.obj: $(indexdir)/TermInfosReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosReader.cpp' object='TermInfosReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosReader.Po' tmpdepfile='$(DEPDIR)/TermInfosReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosReader.obj `cygpath -w $(indexdir)/TermInfosReader.cpp`

TermInfosReader.lo: $(indexdir)/TermInfosReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosReader.cpp' object='TermInfosReader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosReader.Plo' tmpdepfile='$(DEPDIR)/TermInfosReader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosReader.lo `test -f '$(indexdir)/TermInfosReader.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfosReader.cpp

IndexReader.o: $(indexdir)/IndexReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexReader.cpp' object='IndexReader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexReader.Po' tmpdepfile='$(DEPDIR)/IndexReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexReader.o `test -f '$(indexdir)/IndexReader.cpp' || echo '$(srcdir)/'`$(indexdir)/IndexReader.cpp

IndexReader.obj: $(indexdir)/IndexReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexReader.cpp' object='IndexReader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexReader.Po' tmpdepfile='$(DEPDIR)/IndexReader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexReader.obj `cygpath -w $(indexdir)/IndexReader.cpp`

IndexReader.lo: $(indexdir)/IndexReader.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexReader.cpp' object='IndexReader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexReader.Plo' tmpdepfile='$(DEPDIR)/IndexReader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexReader.lo `test -f '$(indexdir)/IndexReader.cpp' || echo '$(srcdir)/'`$(indexdir)/IndexReader.cpp

SegmentTermDocs.o: $(indexdir)/SegmentTermDocs.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermDocs.cpp' object='SegmentTermDocs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermDocs.Po' tmpdepfile='$(DEPDIR)/SegmentTermDocs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermDocs.o `test -f '$(indexdir)/SegmentTermDocs.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermDocs.cpp

SegmentTermDocs.obj: $(indexdir)/SegmentTermDocs.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermDocs.cpp' object='SegmentTermDocs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermDocs.Po' tmpdepfile='$(DEPDIR)/SegmentTermDocs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermDocs.obj `cygpath -w $(indexdir)/SegmentTermDocs.cpp`

SegmentTermDocs.lo: $(indexdir)/SegmentTermDocs.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermDocs.cpp' object='SegmentTermDocs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermDocs.Plo' tmpdepfile='$(DEPDIR)/SegmentTermDocs.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermDocs.lo `test -f '$(indexdir)/SegmentTermDocs.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermDocs.cpp

TermInfosWriter.o: $(indexdir)/TermInfosWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosWriter.cpp' object='TermInfosWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosWriter.Po' tmpdepfile='$(DEPDIR)/TermInfosWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosWriter.o `test -f '$(indexdir)/TermInfosWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfosWriter.cpp

TermInfosWriter.obj: $(indexdir)/TermInfosWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosWriter.cpp' object='TermInfosWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosWriter.Po' tmpdepfile='$(DEPDIR)/TermInfosWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosWriter.obj `cygpath -w $(indexdir)/TermInfosWriter.cpp`

TermInfosWriter.lo: $(indexdir)/TermInfosWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/TermInfosWriter.cpp' object='TermInfosWriter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermInfosWriter.Plo' tmpdepfile='$(DEPDIR)/TermInfosWriter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermInfosWriter.lo `test -f '$(indexdir)/TermInfosWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/TermInfosWriter.cpp

IndexWriter.o: $(indexdir)/IndexWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexWriter.cpp' object='IndexWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexWriter.Po' tmpdepfile='$(DEPDIR)/IndexWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexWriter.o `test -f '$(indexdir)/IndexWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/IndexWriter.cpp

IndexWriter.obj: $(indexdir)/IndexWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexWriter.cpp' object='IndexWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexWriter.Po' tmpdepfile='$(DEPDIR)/IndexWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexWriter.obj `cygpath -w $(indexdir)/IndexWriter.cpp`

IndexWriter.lo: $(indexdir)/IndexWriter.cpp
@AMDEP_TRUE@	source='$(indexdir)/IndexWriter.cpp' object='IndexWriter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexWriter.Plo' tmpdepfile='$(DEPDIR)/IndexWriter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexWriter.lo `test -f '$(indexdir)/IndexWriter.cpp' || echo '$(srcdir)/'`$(indexdir)/IndexWriter.cpp

SegmentTermEnum.o: $(indexdir)/SegmentTermEnum.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermEnum.cpp' object='SegmentTermEnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermEnum.Po' tmpdepfile='$(DEPDIR)/SegmentTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermEnum.o `test -f '$(indexdir)/SegmentTermEnum.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermEnum.cpp

SegmentTermEnum.obj: $(indexdir)/SegmentTermEnum.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermEnum.cpp' object='SegmentTermEnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermEnum.Po' tmpdepfile='$(DEPDIR)/SegmentTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermEnum.obj `cygpath -w $(indexdir)/SegmentTermEnum.cpp`

SegmentTermEnum.lo: $(indexdir)/SegmentTermEnum.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermEnum.cpp' object='SegmentTermEnum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermEnum.Plo' tmpdepfile='$(DEPDIR)/SegmentTermEnum.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermEnum.lo `test -f '$(indexdir)/SegmentTermEnum.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermEnum.cpp

SegmentInfos.o: $(indexdir)/SegmentInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentInfos.cpp' object='SegmentInfos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentInfos.Po' tmpdepfile='$(DEPDIR)/SegmentInfos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentInfos.o `test -f '$(indexdir)/SegmentInfos.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentInfos.cpp

SegmentInfos.obj: $(indexdir)/SegmentInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentInfos.cpp' object='SegmentInfos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentInfos.Po' tmpdepfile='$(DEPDIR)/SegmentInfos.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentInfos.obj `cygpath -w $(indexdir)/SegmentInfos.cpp`

SegmentInfos.lo: $(indexdir)/SegmentInfos.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentInfos.cpp' object='SegmentInfos.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentInfos.Plo' tmpdepfile='$(DEPDIR)/SegmentInfos.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentInfos.lo `test -f '$(indexdir)/SegmentInfos.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentInfos.cpp

SegmentTermPositions.o: $(indexdir)/SegmentTermPositions.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermPositions.cpp' object='SegmentTermPositions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermPositions.Po' tmpdepfile='$(DEPDIR)/SegmentTermPositions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermPositions.o `test -f '$(indexdir)/SegmentTermPositions.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermPositions.cpp

SegmentTermPositions.obj: $(indexdir)/SegmentTermPositions.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermPositions.cpp' object='SegmentTermPositions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermPositions.Po' tmpdepfile='$(DEPDIR)/SegmentTermPositions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermPositions.obj `cygpath -w $(indexdir)/SegmentTermPositions.cpp`

SegmentTermPositions.lo: $(indexdir)/SegmentTermPositions.cpp
@AMDEP_TRUE@	source='$(indexdir)/SegmentTermPositions.cpp' object='SegmentTermPositions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SegmentTermPositions.Plo' tmpdepfile='$(DEPDIR)/SegmentTermPositions.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentTermPositions.lo `test -f '$(indexdir)/SegmentTermPositions.cpp' || echo '$(srcdir)/'`$(indexdir)/SegmentTermPositions.cpp

Lexer.o: $(qpdir)/Lexer.cpp
@AMDEP_TRUE@	source='$(qpdir)/Lexer.cpp' object='Lexer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lexer.Po' tmpdepfile='$(DEPDIR)/Lexer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lexer.o `test -f '$(qpdir)/Lexer.cpp' || echo '$(srcdir)/'`$(qpdir)/Lexer.cpp

Lexer.obj: $(qpdir)/Lexer.cpp
@AMDEP_TRUE@	source='$(qpdir)/Lexer.cpp' object='Lexer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lexer.Po' tmpdepfile='$(DEPDIR)/Lexer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lexer.obj `cygpath -w $(qpdir)/Lexer.cpp`

Lexer.lo: $(qpdir)/Lexer.cpp
@AMDEP_TRUE@	source='$(qpdir)/Lexer.cpp' object='Lexer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lexer.Plo' tmpdepfile='$(DEPDIR)/Lexer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lexer.lo `test -f '$(qpdir)/Lexer.cpp' || echo '$(srcdir)/'`$(qpdir)/Lexer.cpp

QueryParser.o: $(qpdir)/QueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParser.cpp' object='QueryParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParser.Po' tmpdepfile='$(DEPDIR)/QueryParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParser.o `test -f '$(qpdir)/QueryParser.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryParser.cpp

QueryParser.obj: $(qpdir)/QueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParser.cpp' object='QueryParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParser.Po' tmpdepfile='$(DEPDIR)/QueryParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParser.obj `cygpath -w $(qpdir)/QueryParser.cpp`

QueryParser.lo: $(qpdir)/QueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParser.cpp' object='QueryParser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParser.Plo' tmpdepfile='$(DEPDIR)/QueryParser.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParser.lo `test -f '$(qpdir)/QueryParser.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryParser.cpp

QueryParserBase.o: $(qpdir)/QueryParserBase.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParserBase.cpp' object='QueryParserBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParserBase.Po' tmpdepfile='$(DEPDIR)/QueryParserBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParserBase.o `test -f '$(qpdir)/QueryParserBase.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryParserBase.cpp

QueryParserBase.obj: $(qpdir)/QueryParserBase.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParserBase.cpp' object='QueryParserBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParserBase.Po' tmpdepfile='$(DEPDIR)/QueryParserBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParserBase.obj `cygpath -w $(qpdir)/QueryParserBase.cpp`

QueryParserBase.lo: $(qpdir)/QueryParserBase.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryParserBase.cpp' object='QueryParserBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryParserBase.Plo' tmpdepfile='$(DEPDIR)/QueryParserBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryParserBase.lo `test -f '$(qpdir)/QueryParserBase.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryParserBase.cpp

QueryToken.o: $(qpdir)/QueryToken.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryToken.cpp' object='QueryToken.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryToken.Po' tmpdepfile='$(DEPDIR)/QueryToken.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryToken.o `test -f '$(qpdir)/QueryToken.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryToken.cpp

QueryToken.obj: $(qpdir)/QueryToken.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryToken.cpp' object='QueryToken.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryToken.Po' tmpdepfile='$(DEPDIR)/QueryToken.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryToken.obj `cygpath -w $(qpdir)/QueryToken.cpp`

QueryToken.lo: $(qpdir)/QueryToken.cpp
@AMDEP_TRUE@	source='$(qpdir)/QueryToken.cpp' object='QueryToken.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QueryToken.Plo' tmpdepfile='$(DEPDIR)/QueryToken.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QueryToken.lo `test -f '$(qpdir)/QueryToken.cpp' || echo '$(srcdir)/'`$(qpdir)/QueryToken.cpp

TokenList.o: $(qpdir)/TokenList.cpp
@AMDEP_TRUE@	source='$(qpdir)/TokenList.cpp' object='TokenList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TokenList.Po' tmpdepfile='$(DEPDIR)/TokenList.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TokenList.o `test -f '$(qpdir)/TokenList.cpp' || echo '$(srcdir)/'`$(qpdir)/TokenList.cpp

TokenList.obj: $(qpdir)/TokenList.cpp
@AMDEP_TRUE@	source='$(qpdir)/TokenList.cpp' object='TokenList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TokenList.Po' tmpdepfile='$(DEPDIR)/TokenList.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TokenList.obj `cygpath -w $(qpdir)/TokenList.cpp`

TokenList.lo: $(qpdir)/TokenList.cpp
@AMDEP_TRUE@	source='$(qpdir)/TokenList.cpp' object='TokenList.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TokenList.Plo' tmpdepfile='$(DEPDIR)/TokenList.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TokenList.lo `test -f '$(qpdir)/TokenList.cpp' || echo '$(srcdir)/'`$(qpdir)/TokenList.cpp

MultiFieldQueryParser.o: $(qpdir)/MultiFieldQueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/MultiFieldQueryParser.cpp' object='MultiFieldQueryParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiFieldQueryParser.Po' tmpdepfile='$(DEPDIR)/MultiFieldQueryParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiFieldQueryParser.o `test -f '$(qpdir)/MultiFieldQueryParser.cpp' || echo '$(srcdir)/'`$(qpdir)/MultiFieldQueryParser.cpp

MultiFieldQueryParser.obj: $(qpdir)/MultiFieldQueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/MultiFieldQueryParser.cpp' object='MultiFieldQueryParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiFieldQueryParser.Po' tmpdepfile='$(DEPDIR)/MultiFieldQueryParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiFieldQueryParser.obj `cygpath -w $(qpdir)/MultiFieldQueryParser.cpp`

MultiFieldQueryParser.lo: $(qpdir)/MultiFieldQueryParser.cpp
@AMDEP_TRUE@	source='$(qpdir)/MultiFieldQueryParser.cpp' object='MultiFieldQueryParser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiFieldQueryParser.Plo' tmpdepfile='$(DEPDIR)/MultiFieldQueryParser.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiFieldQueryParser.lo `test -f '$(qpdir)/MultiFieldQueryParser.cpp' || echo '$(srcdir)/'`$(qpdir)/MultiFieldQueryParser.cpp

BooleanQuery.o: $(searchdir)/BooleanQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanQuery.cpp' object='BooleanQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanQuery.Po' tmpdepfile='$(DEPDIR)/BooleanQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanQuery.o `test -f '$(searchdir)/BooleanQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/BooleanQuery.cpp

BooleanQuery.obj: $(searchdir)/BooleanQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanQuery.cpp' object='BooleanQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanQuery.Po' tmpdepfile='$(DEPDIR)/BooleanQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanQuery.obj `cygpath -w $(searchdir)/BooleanQuery.cpp`

BooleanQuery.lo: $(searchdir)/BooleanQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanQuery.cpp' object='BooleanQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanQuery.Plo' tmpdepfile='$(DEPDIR)/BooleanQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanQuery.lo `test -f '$(searchdir)/BooleanQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/BooleanQuery.cpp

IndexSearcher.o: $(searchdir)/IndexSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/IndexSearcher.cpp' object='IndexSearcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexSearcher.Po' tmpdepfile='$(DEPDIR)/IndexSearcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexSearcher.o `test -f '$(searchdir)/IndexSearcher.cpp' || echo '$(srcdir)/'`$(searchdir)/IndexSearcher.cpp

IndexSearcher.obj: $(searchdir)/IndexSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/IndexSearcher.cpp' object='IndexSearcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexSearcher.Po' tmpdepfile='$(DEPDIR)/IndexSearcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexSearcher.obj `cygpath -w $(searchdir)/IndexSearcher.cpp`

IndexSearcher.lo: $(searchdir)/IndexSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/IndexSearcher.cpp' object='IndexSearcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/IndexSearcher.Plo' tmpdepfile='$(DEPDIR)/IndexSearcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IndexSearcher.lo `test -f '$(searchdir)/IndexSearcher.cpp' || echo '$(srcdir)/'`$(searchdir)/IndexSearcher.cpp

Similarity.o: $(searchdir)/Similarity.cpp
@AMDEP_TRUE@	source='$(searchdir)/Similarity.cpp' object='Similarity.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Similarity.Po' tmpdepfile='$(DEPDIR)/Similarity.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Similarity.o `test -f '$(searchdir)/Similarity.cpp' || echo '$(srcdir)/'`$(searchdir)/Similarity.cpp

Similarity.obj: $(searchdir)/Similarity.cpp
@AMDEP_TRUE@	source='$(searchdir)/Similarity.cpp' object='Similarity.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Similarity.Po' tmpdepfile='$(DEPDIR)/Similarity.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Similarity.obj `cygpath -w $(searchdir)/Similarity.cpp`

Similarity.lo: $(searchdir)/Similarity.cpp
@AMDEP_TRUE@	source='$(searchdir)/Similarity.cpp' object='Similarity.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Similarity.Plo' tmpdepfile='$(DEPDIR)/Similarity.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Similarity.lo `test -f '$(searchdir)/Similarity.cpp' || echo '$(srcdir)/'`$(searchdir)/Similarity.cpp

BooleanScorer.o: $(searchdir)/BooleanScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanScorer.cpp' object='BooleanScorer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanScorer.Po' tmpdepfile='$(DEPDIR)/BooleanScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanScorer.o `test -f '$(searchdir)/BooleanScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/BooleanScorer.cpp

BooleanScorer.obj: $(searchdir)/BooleanScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanScorer.cpp' object='BooleanScorer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanScorer.Po' tmpdepfile='$(DEPDIR)/BooleanScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanScorer.obj `cygpath -w $(searchdir)/BooleanScorer.cpp`

BooleanScorer.lo: $(searchdir)/BooleanScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/BooleanScorer.cpp' object='BooleanScorer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BooleanScorer.Plo' tmpdepfile='$(DEPDIR)/BooleanScorer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BooleanScorer.lo `test -f '$(searchdir)/BooleanScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/BooleanScorer.cpp

MultiTermQuery.o: $(searchdir)/MultiTermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiTermQuery.cpp' object='MultiTermQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiTermQuery.Po' tmpdepfile='$(DEPDIR)/MultiTermQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiTermQuery.o `test -f '$(searchdir)/MultiTermQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/MultiTermQuery.cpp

MultiTermQuery.obj: $(searchdir)/MultiTermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiTermQuery.cpp' object='MultiTermQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiTermQuery.Po' tmpdepfile='$(DEPDIR)/MultiTermQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiTermQuery.obj `cygpath -w $(searchdir)/MultiTermQuery.cpp`

MultiTermQuery.lo: $(searchdir)/MultiTermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiTermQuery.cpp' object='MultiTermQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiTermQuery.Plo' tmpdepfile='$(DEPDIR)/MultiTermQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiTermQuery.lo `test -f '$(searchdir)/MultiTermQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/MultiTermQuery.cpp

SloppyPhraseScorer.o: $(searchdir)/SloppyPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/SloppyPhraseScorer.cpp' object='SloppyPhraseScorer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SloppyPhraseScorer.Po' tmpdepfile='$(DEPDIR)/SloppyPhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SloppyPhraseScorer.o `test -f '$(searchdir)/SloppyPhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/SloppyPhraseScorer.cpp

SloppyPhraseScorer.obj: $(searchdir)/SloppyPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/SloppyPhraseScorer.cpp' object='SloppyPhraseScorer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SloppyPhraseScorer.Po' tmpdepfile='$(DEPDIR)/SloppyPhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SloppyPhraseScorer.obj `cygpath -w $(searchdir)/SloppyPhraseScorer.cpp`

SloppyPhraseScorer.lo: $(searchdir)/SloppyPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/SloppyPhraseScorer.cpp' object='SloppyPhraseScorer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SloppyPhraseScorer.Plo' tmpdepfile='$(DEPDIR)/SloppyPhraseScorer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SloppyPhraseScorer.lo `test -f '$(searchdir)/SloppyPhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/SloppyPhraseScorer.cpp

DateFilter.o: $(searchdir)/DateFilter.cpp
@AMDEP_TRUE@	source='$(searchdir)/DateFilter.cpp' object='DateFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateFilter.Po' tmpdepfile='$(DEPDIR)/DateFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateFilter.o `test -f '$(searchdir)/DateFilter.cpp' || echo '$(srcdir)/'`$(searchdir)/DateFilter.cpp

DateFilter.obj: $(searchdir)/DateFilter.cpp
@AMDEP_TRUE@	source='$(searchdir)/DateFilter.cpp' object='DateFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateFilter.Po' tmpdepfile='$(DEPDIR)/DateFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateFilter.obj `cygpath -w $(searchdir)/DateFilter.cpp`

DateFilter.lo: $(searchdir)/DateFilter.cpp
@AMDEP_TRUE@	source='$(searchdir)/DateFilter.cpp' object='DateFilter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DateFilter.Plo' tmpdepfile='$(DEPDIR)/DateFilter.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateFilter.lo `test -f '$(searchdir)/DateFilter.cpp' || echo '$(srcdir)/'`$(searchdir)/DateFilter.cpp

PhrasePositions.o: $(searchdir)/PhrasePositions.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhrasePositions.cpp' object='PhrasePositions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhrasePositions.Po' tmpdepfile='$(DEPDIR)/PhrasePositions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhrasePositions.o `test -f '$(searchdir)/PhrasePositions.cpp' || echo '$(srcdir)/'`$(searchdir)/PhrasePositions.cpp

PhrasePositions.obj: $(searchdir)/PhrasePositions.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhrasePositions.cpp' object='PhrasePositions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhrasePositions.Po' tmpdepfile='$(DEPDIR)/PhrasePositions.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhrasePositions.obj `cygpath -w $(searchdir)/PhrasePositions.cpp`

PhrasePositions.lo: $(searchdir)/PhrasePositions.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhrasePositions.cpp' object='PhrasePositions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhrasePositions.Plo' tmpdepfile='$(DEPDIR)/PhrasePositions.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhrasePositions.lo `test -f '$(searchdir)/PhrasePositions.cpp' || echo '$(srcdir)/'`$(searchdir)/PhrasePositions.cpp

TermQuery.o: $(searchdir)/TermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermQuery.cpp' object='TermQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermQuery.Po' tmpdepfile='$(DEPDIR)/TermQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermQuery.o `test -f '$(searchdir)/TermQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/TermQuery.cpp

TermQuery.obj: $(searchdir)/TermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermQuery.cpp' object='TermQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermQuery.Po' tmpdepfile='$(DEPDIR)/TermQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermQuery.obj `cygpath -w $(searchdir)/TermQuery.cpp`

TermQuery.lo: $(searchdir)/TermQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermQuery.cpp' object='TermQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermQuery.Plo' tmpdepfile='$(DEPDIR)/TermQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermQuery.lo `test -f '$(searchdir)/TermQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/TermQuery.cpp

ExactPhraseScorer.o: $(searchdir)/ExactPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/ExactPhraseScorer.cpp' object='ExactPhraseScorer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ExactPhraseScorer.Po' tmpdepfile='$(DEPDIR)/ExactPhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExactPhraseScorer.o `test -f '$(searchdir)/ExactPhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/ExactPhraseScorer.cpp

ExactPhraseScorer.obj: $(searchdir)/ExactPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/ExactPhraseScorer.cpp' object='ExactPhraseScorer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ExactPhraseScorer.Po' tmpdepfile='$(DEPDIR)/ExactPhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExactPhraseScorer.obj `cygpath -w $(searchdir)/ExactPhraseScorer.cpp`

ExactPhraseScorer.lo: $(searchdir)/ExactPhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/ExactPhraseScorer.cpp' object='ExactPhraseScorer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ExactPhraseScorer.Plo' tmpdepfile='$(DEPDIR)/ExactPhraseScorer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExactPhraseScorer.lo `test -f '$(searchdir)/ExactPhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/ExactPhraseScorer.cpp

PhraseQuery.o: $(searchdir)/PhraseQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseQuery.cpp' object='PhraseQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseQuery.Po' tmpdepfile='$(DEPDIR)/PhraseQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseQuery.o `test -f '$(searchdir)/PhraseQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/PhraseQuery.cpp

PhraseQuery.obj: $(searchdir)/PhraseQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseQuery.cpp' object='PhraseQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseQuery.Po' tmpdepfile='$(DEPDIR)/PhraseQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseQuery.obj `cygpath -w $(searchdir)/PhraseQuery.cpp`

PhraseQuery.lo: $(searchdir)/PhraseQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseQuery.cpp' object='PhraseQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseQuery.Plo' tmpdepfile='$(DEPDIR)/PhraseQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseQuery.lo `test -f '$(searchdir)/PhraseQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/PhraseQuery.cpp

TermScorer.o: $(searchdir)/TermScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermScorer.cpp' object='TermScorer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermScorer.Po' tmpdepfile='$(DEPDIR)/TermScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermScorer.o `test -f '$(searchdir)/TermScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/TermScorer.cpp

TermScorer.obj: $(searchdir)/TermScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermScorer.cpp' object='TermScorer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermScorer.Po' tmpdepfile='$(DEPDIR)/TermScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermScorer.obj `cygpath -w $(searchdir)/TermScorer.cpp`

TermScorer.lo: $(searchdir)/TermScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/TermScorer.cpp' object='TermScorer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TermScorer.Plo' tmpdepfile='$(DEPDIR)/TermScorer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TermScorer.lo `test -f '$(searchdir)/TermScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/TermScorer.cpp

FilteredTermEnum.o: $(searchdir)/FilteredTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/FilteredTermEnum.cpp' object='FilteredTermEnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FilteredTermEnum.Po' tmpdepfile='$(DEPDIR)/FilteredTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilteredTermEnum.o `test -f '$(searchdir)/FilteredTermEnum.cpp' || echo '$(srcdir)/'`$(searchdir)/FilteredTermEnum.cpp

FilteredTermEnum.obj: $(searchdir)/FilteredTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/FilteredTermEnum.cpp' object='FilteredTermEnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FilteredTermEnum.Po' tmpdepfile='$(DEPDIR)/FilteredTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilteredTermEnum.obj `cygpath -w $(searchdir)/FilteredTermEnum.cpp`

FilteredTermEnum.lo: $(searchdir)/FilteredTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/FilteredTermEnum.cpp' object='FilteredTermEnum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FilteredTermEnum.Plo' tmpdepfile='$(DEPDIR)/FilteredTermEnum.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilteredTermEnum.lo `test -f '$(searchdir)/FilteredTermEnum.cpp' || echo '$(srcdir)/'`$(searchdir)/FilteredTermEnum.cpp

PhraseScorer.o: $(searchdir)/PhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseScorer.cpp' object='PhraseScorer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseScorer.Po' tmpdepfile='$(DEPDIR)/PhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseScorer.o `test -f '$(searchdir)/PhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/PhraseScorer.cpp

PhraseScorer.obj: $(searchdir)/PhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseScorer.cpp' object='PhraseScorer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseScorer.Po' tmpdepfile='$(DEPDIR)/PhraseScorer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseScorer.obj `cygpath -w $(searchdir)/PhraseScorer.cpp`

PhraseScorer.lo: $(searchdir)/PhraseScorer.cpp
@AMDEP_TRUE@	source='$(searchdir)/PhraseScorer.cpp' object='PhraseScorer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PhraseScorer.Plo' tmpdepfile='$(DEPDIR)/PhraseScorer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PhraseScorer.lo `test -f '$(searchdir)/PhraseScorer.cpp' || echo '$(srcdir)/'`$(searchdir)/PhraseScorer.cpp

TopDocs.o: $(searchdir)/TopDocs.cpp
@AMDEP_TRUE@	source='$(searchdir)/TopDocs.cpp' object='TopDocs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TopDocs.Po' tmpdepfile='$(DEPDIR)/TopDocs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TopDocs.o `test -f '$(searchdir)/TopDocs.cpp' || echo '$(srcdir)/'`$(searchdir)/TopDocs.cpp

TopDocs.obj: $(searchdir)/TopDocs.cpp
@AMDEP_TRUE@	source='$(searchdir)/TopDocs.cpp' object='TopDocs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TopDocs.Po' tmpdepfile='$(DEPDIR)/TopDocs.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TopDocs.obj `cygpath -w $(searchdir)/TopDocs.cpp`

TopDocs.lo: $(searchdir)/TopDocs.cpp
@AMDEP_TRUE@	source='$(searchdir)/TopDocs.cpp' object='TopDocs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TopDocs.Plo' tmpdepfile='$(DEPDIR)/TopDocs.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TopDocs.lo `test -f '$(searchdir)/TopDocs.cpp' || echo '$(srcdir)/'`$(searchdir)/TopDocs.cpp

HitQueue.o: $(searchdir)/HitQueue.cpp
@AMDEP_TRUE@	source='$(searchdir)/HitQueue.cpp' object='HitQueue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HitQueue.Po' tmpdepfile='$(DEPDIR)/HitQueue.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HitQueue.o `test -f '$(searchdir)/HitQueue.cpp' || echo '$(srcdir)/'`$(searchdir)/HitQueue.cpp

HitQueue.obj: $(searchdir)/HitQueue.cpp
@AMDEP_TRUE@	source='$(searchdir)/HitQueue.cpp' object='HitQueue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HitQueue.Po' tmpdepfile='$(DEPDIR)/HitQueue.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HitQueue.obj `cygpath -w $(searchdir)/HitQueue.cpp`

HitQueue.lo: $(searchdir)/HitQueue.cpp
@AMDEP_TRUE@	source='$(searchdir)/HitQueue.cpp' object='HitQueue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HitQueue.Plo' tmpdepfile='$(DEPDIR)/HitQueue.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HitQueue.lo `test -f '$(searchdir)/HitQueue.cpp' || echo '$(srcdir)/'`$(searchdir)/HitQueue.cpp

PrefixQuery.o: $(searchdir)/PrefixQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PrefixQuery.cpp' object='PrefixQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PrefixQuery.Po' tmpdepfile='$(DEPDIR)/PrefixQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrefixQuery.o `test -f '$(searchdir)/PrefixQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/PrefixQuery.cpp

PrefixQuery.obj: $(searchdir)/PrefixQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PrefixQuery.cpp' object='PrefixQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PrefixQuery.Po' tmpdepfile='$(DEPDIR)/PrefixQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrefixQuery.obj `cygpath -w $(searchdir)/PrefixQuery.cpp`

PrefixQuery.lo: $(searchdir)/PrefixQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/PrefixQuery.cpp' object='PrefixQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PrefixQuery.Plo' tmpdepfile='$(DEPDIR)/PrefixQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PrefixQuery.lo `test -f '$(searchdir)/PrefixQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/PrefixQuery.cpp

WildcardQuery.o: $(searchdir)/WildcardQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardQuery.cpp' object='WildcardQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardQuery.Po' tmpdepfile='$(DEPDIR)/WildcardQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardQuery.o `test -f '$(searchdir)/WildcardQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/WildcardQuery.cpp

WildcardQuery.obj: $(searchdir)/WildcardQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardQuery.cpp' object='WildcardQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardQuery.Po' tmpdepfile='$(DEPDIR)/WildcardQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardQuery.obj `cygpath -w $(searchdir)/WildcardQuery.cpp`

WildcardQuery.lo: $(searchdir)/WildcardQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardQuery.cpp' object='WildcardQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardQuery.Plo' tmpdepfile='$(DEPDIR)/WildcardQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardQuery.lo `test -f '$(searchdir)/WildcardQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/WildcardQuery.cpp

Hits.o: $(searchdir)/Hits.cpp
@AMDEP_TRUE@	source='$(searchdir)/Hits.cpp' object='Hits.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Hits.Po' tmpdepfile='$(DEPDIR)/Hits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Hits.o `test -f '$(searchdir)/Hits.cpp' || echo '$(srcdir)/'`$(searchdir)/Hits.cpp

Hits.obj: $(searchdir)/Hits.cpp
@AMDEP_TRUE@	source='$(searchdir)/Hits.cpp' object='Hits.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Hits.Po' tmpdepfile='$(DEPDIR)/Hits.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Hits.obj `cygpath -w $(searchdir)/Hits.cpp`

Hits.lo: $(searchdir)/Hits.cpp
@AMDEP_TRUE@	source='$(searchdir)/Hits.cpp' object='Hits.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Hits.Plo' tmpdepfile='$(DEPDIR)/Hits.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Hits.lo `test -f '$(searchdir)/Hits.cpp' || echo '$(srcdir)/'`$(searchdir)/Hits.cpp

RangeQuery.o: $(searchdir)/RangeQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/RangeQuery.cpp' object='RangeQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RangeQuery.Po' tmpdepfile='$(DEPDIR)/RangeQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RangeQuery.o `test -f '$(searchdir)/RangeQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/RangeQuery.cpp

RangeQuery.obj: $(searchdir)/RangeQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/RangeQuery.cpp' object='RangeQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RangeQuery.Po' tmpdepfile='$(DEPDIR)/RangeQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RangeQuery.obj `cygpath -w $(searchdir)/RangeQuery.cpp`

RangeQuery.lo: $(searchdir)/RangeQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/RangeQuery.cpp' object='RangeQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RangeQuery.Plo' tmpdepfile='$(DEPDIR)/RangeQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RangeQuery.lo `test -f '$(searchdir)/RangeQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/RangeQuery.cpp

WildcardTermEnum.o: $(searchdir)/WildcardTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardTermEnum.cpp' object='WildcardTermEnum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardTermEnum.Po' tmpdepfile='$(DEPDIR)/WildcardTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardTermEnum.o `test -f '$(searchdir)/WildcardTermEnum.cpp' || echo '$(srcdir)/'`$(searchdir)/WildcardTermEnum.cpp

WildcardTermEnum.obj: $(searchdir)/WildcardTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardTermEnum.cpp' object='WildcardTermEnum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardTermEnum.Po' tmpdepfile='$(DEPDIR)/WildcardTermEnum.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardTermEnum.obj `cygpath -w $(searchdir)/WildcardTermEnum.cpp`

WildcardTermEnum.lo: $(searchdir)/WildcardTermEnum.cpp
@AMDEP_TRUE@	source='$(searchdir)/WildcardTermEnum.cpp' object='WildcardTermEnum.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WildcardTermEnum.Plo' tmpdepfile='$(DEPDIR)/WildcardTermEnum.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WildcardTermEnum.lo `test -f '$(searchdir)/WildcardTermEnum.cpp' || echo '$(srcdir)/'`$(searchdir)/WildcardTermEnum.cpp

FuzzyQuery.o: $(searchdir)/FuzzyQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/FuzzyQuery.cpp' object='FuzzyQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FuzzyQuery.Po' tmpdepfile='$(DEPDIR)/FuzzyQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyQuery.o `test -f '$(searchdir)/FuzzyQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/FuzzyQuery.cpp

FuzzyQuery.obj: $(searchdir)/FuzzyQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/FuzzyQuery.cpp' object='FuzzyQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FuzzyQuery.Po' tmpdepfile='$(DEPDIR)/FuzzyQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyQuery.obj `cygpath -w $(searchdir)/FuzzyQuery.cpp`

FuzzyQuery.lo: $(searchdir)/FuzzyQuery.cpp
@AMDEP_TRUE@	source='$(searchdir)/FuzzyQuery.cpp' object='FuzzyQuery.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FuzzyQuery.Plo' tmpdepfile='$(DEPDIR)/FuzzyQuery.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyQuery.lo `test -f '$(searchdir)/FuzzyQuery.cpp' || echo '$(srcdir)/'`$(searchdir)/FuzzyQuery.cpp

MultiSearcher.o: $(searchdir)/MultiSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiSearcher.cpp' object='MultiSearcher.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiSearcher.Po' tmpdepfile='$(DEPDIR)/MultiSearcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiSearcher.o `test -f '$(searchdir)/MultiSearcher.cpp' || echo '$(srcdir)/'`$(searchdir)/MultiSearcher.cpp

MultiSearcher.obj: $(searchdir)/MultiSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiSearcher.cpp' object='MultiSearcher.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiSearcher.Po' tmpdepfile='$(DEPDIR)/MultiSearcher.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiSearcher.obj `cygpath -w $(searchdir)/MultiSearcher.cpp`

MultiSearcher.lo: $(searchdir)/MultiSearcher.cpp
@AMDEP_TRUE@	source='$(searchdir)/MultiSearcher.cpp' object='MultiSearcher.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiSearcher.Plo' tmpdepfile='$(DEPDIR)/MultiSearcher.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiSearcher.lo `test -f '$(searchdir)/MultiSearcher.cpp' || echo '$(srcdir)/'`$(searchdir)/MultiSearcher.cpp

FSDirectory.o: $(storedir)/FSDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/FSDirectory.cpp' object='FSDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FSDirectory.Po' tmpdepfile='$(DEPDIR)/FSDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FSDirectory.o `test -f '$(storedir)/FSDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/FSDirectory.cpp

FSDirectory.obj: $(storedir)/FSDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/FSDirectory.cpp' object='FSDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FSDirectory.Po' tmpdepfile='$(DEPDIR)/FSDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FSDirectory.obj `cygpath -w $(storedir)/FSDirectory.cpp`

FSDirectory.lo: $(storedir)/FSDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/FSDirectory.cpp' object='FSDirectory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FSDirectory.Plo' tmpdepfile='$(DEPDIR)/FSDirectory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FSDirectory.lo `test -f '$(storedir)/FSDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/FSDirectory.cpp

InputStream.o: $(storedir)/InputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/InputStream.cpp' object='InputStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/InputStream.Po' tmpdepfile='$(DEPDIR)/InputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputStream.o `test -f '$(storedir)/InputStream.cpp' || echo '$(srcdir)/'`$(storedir)/InputStream.cpp

InputStream.obj: $(storedir)/InputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/InputStream.cpp' object='InputStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/InputStream.Po' tmpdepfile='$(DEPDIR)/InputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputStream.obj `cygpath -w $(storedir)/InputStream.cpp`

InputStream.lo: $(storedir)/InputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/InputStream.cpp' object='InputStream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/InputStream.Plo' tmpdepfile='$(DEPDIR)/InputStream.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputStream.lo `test -f '$(storedir)/InputStream.cpp' || echo '$(srcdir)/'`$(storedir)/InputStream.cpp

Lock.o: $(storedir)/Lock.cpp
@AMDEP_TRUE@	source='$(storedir)/Lock.cpp' object='Lock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lock.Po' tmpdepfile='$(DEPDIR)/Lock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.o `test -f '$(storedir)/Lock.cpp' || echo '$(srcdir)/'`$(storedir)/Lock.cpp

Lock.obj: $(storedir)/Lock.cpp
@AMDEP_TRUE@	source='$(storedir)/Lock.cpp' object='Lock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lock.Po' tmpdepfile='$(DEPDIR)/Lock.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.obj `cygpath -w $(storedir)/Lock.cpp`

Lock.lo: $(storedir)/Lock.cpp
@AMDEP_TRUE@	source='$(storedir)/Lock.cpp' object='Lock.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Lock.Plo' tmpdepfile='$(DEPDIR)/Lock.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Lock.lo `test -f '$(storedir)/Lock.cpp' || echo '$(srcdir)/'`$(storedir)/Lock.cpp

OutputStream.o: $(storedir)/OutputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/OutputStream.cpp' object='OutputStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OutputStream.Po' tmpdepfile='$(DEPDIR)/OutputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OutputStream.o `test -f '$(storedir)/OutputStream.cpp' || echo '$(srcdir)/'`$(storedir)/OutputStream.cpp

OutputStream.obj: $(storedir)/OutputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/OutputStream.cpp' object='OutputStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OutputStream.Po' tmpdepfile='$(DEPDIR)/OutputStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OutputStream.obj `cygpath -w $(storedir)/OutputStream.cpp`

OutputStream.lo: $(storedir)/OutputStream.cpp
@AMDEP_TRUE@	source='$(storedir)/OutputStream.cpp' object='OutputStream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OutputStream.Plo' tmpdepfile='$(DEPDIR)/OutputStream.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OutputStream.lo `test -f '$(storedir)/OutputStream.cpp' || echo '$(srcdir)/'`$(storedir)/OutputStream.cpp

RAMDirectory.o: $(storedir)/RAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/RAMDirectory.cpp' object='RAMDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RAMDirectory.Po' tmpdepfile='$(DEPDIR)/RAMDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RAMDirectory.o `test -f '$(storedir)/RAMDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/RAMDirectory.cpp

RAMDirectory.obj: $(storedir)/RAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/RAMDirectory.cpp' object='RAMDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RAMDirectory.Po' tmpdepfile='$(DEPDIR)/RAMDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RAMDirectory.obj `cygpath -w $(storedir)/RAMDirectory.cpp`

RAMDirectory.lo: $(storedir)/RAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/RAMDirectory.cpp' object='RAMDirectory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RAMDirectory.Plo' tmpdepfile='$(DEPDIR)/RAMDirectory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RAMDirectory.lo `test -f '$(storedir)/RAMDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/RAMDirectory.cpp

TransactionalRAMDirectory.o: $(storedir)/TransactionalRAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/TransactionalRAMDirectory.cpp' object='TransactionalRAMDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TransactionalRAMDirectory.Po' tmpdepfile='$(DEPDIR)/TransactionalRAMDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TransactionalRAMDirectory.o `test -f '$(storedir)/TransactionalRAMDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/TransactionalRAMDirectory.cpp

TransactionalRAMDirectory.obj: $(storedir)/TransactionalRAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/TransactionalRAMDirectory.cpp' object='TransactionalRAMDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TransactionalRAMDirectory.Po' tmpdepfile='$(DEPDIR)/TransactionalRAMDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TransactionalRAMDirectory.obj `cygpath -w $(storedir)/TransactionalRAMDirectory.cpp`

TransactionalRAMDirectory.lo: $(storedir)/TransactionalRAMDirectory.cpp
@AMDEP_TRUE@	source='$(storedir)/TransactionalRAMDirectory.cpp' object='TransactionalRAMDirectory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TransactionalRAMDirectory.Plo' tmpdepfile='$(DEPDIR)/TransactionalRAMDirectory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TransactionalRAMDirectory.lo `test -f '$(storedir)/TransactionalRAMDirectory.cpp' || echo '$(srcdir)/'`$(storedir)/TransactionalRAMDirectory.cpp

Arrays.o: $(utildir)/Arrays.cpp
@AMDEP_TRUE@	source='$(utildir)/Arrays.cpp' object='Arrays.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Arrays.Po' tmpdepfile='$(DEPDIR)/Arrays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Arrays.o `test -f '$(utildir)/Arrays.cpp' || echo '$(srcdir)/'`$(utildir)/Arrays.cpp

Arrays.obj: $(utildir)/Arrays.cpp
@AMDEP_TRUE@	source='$(utildir)/Arrays.cpp' object='Arrays.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Arrays.Po' tmpdepfile='$(DEPDIR)/Arrays.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Arrays.obj `cygpath -w $(utildir)/Arrays.cpp`

Arrays.lo: $(utildir)/Arrays.cpp
@AMDEP_TRUE@	source='$(utildir)/Arrays.cpp' object='Arrays.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Arrays.Plo' tmpdepfile='$(DEPDIR)/Arrays.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Arrays.lo `test -f '$(utildir)/Arrays.cpp' || echo '$(srcdir)/'`$(utildir)/Arrays.cpp

FastCharStream.o: $(utildir)/FastCharStream.cpp
@AMDEP_TRUE@	source='$(utildir)/FastCharStream.cpp' object='FastCharStream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FastCharStream.Po' tmpdepfile='$(DEPDIR)/FastCharStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FastCharStream.o `test -f '$(utildir)/FastCharStream.cpp' || echo '$(srcdir)/'`$(utildir)/FastCharStream.cpp

FastCharStream.obj: $(utildir)/FastCharStream.cpp
@AMDEP_TRUE@	source='$(utildir)/FastCharStream.cpp' object='FastCharStream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FastCharStream.Po' tmpdepfile='$(DEPDIR)/FastCharStream.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FastCharStream.obj `cygpath -w $(utildir)/FastCharStream.cpp`

FastCharStream.lo: $(utildir)/FastCharStream.cpp
@AMDEP_TRUE@	source='$(utildir)/FastCharStream.cpp' object='FastCharStream.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FastCharStream.Plo' tmpdepfile='$(DEPDIR)/FastCharStream.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FastCharStream.lo `test -f '$(utildir)/FastCharStream.cpp' || echo '$(srcdir)/'`$(utildir)/FastCharStream.cpp

Reader.o: $(utildir)/Reader.cpp
@AMDEP_TRUE@	source='$(utildir)/Reader.cpp' object='Reader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Reader.Po' tmpdepfile='$(DEPDIR)/Reader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Reader.o `test -f '$(utildir)/Reader.cpp' || echo '$(srcdir)/'`$(utildir)/Reader.cpp

Reader.obj: $(utildir)/Reader.cpp
@AMDEP_TRUE@	source='$(utildir)/Reader.cpp' object='Reader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Reader.Po' tmpdepfile='$(DEPDIR)/Reader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Reader.obj `cygpath -w $(utildir)/Reader.cpp`

Reader.lo: $(utildir)/Reader.cpp
@AMDEP_TRUE@	source='$(utildir)/Reader.cpp' object='Reader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Reader.Plo' tmpdepfile='$(DEPDIR)/Reader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Reader.lo `test -f '$(utildir)/Reader.cpp' || echo '$(srcdir)/'`$(utildir)/Reader.cpp

BitVector.o: $(utildir)/BitVector.cpp
@AMDEP_TRUE@	source='$(utildir)/BitVector.cpp' object='BitVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BitVector.Po' tmpdepfile='$(DEPDIR)/BitVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BitVector.o `test -f '$(utildir)/BitVector.cpp' || echo '$(srcdir)/'`$(utildir)/BitVector.cpp

BitVector.obj: $(utildir)/BitVector.cpp
@AMDEP_TRUE@	source='$(utildir)/BitVector.cpp' object='BitVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BitVector.Po' tmpdepfile='$(DEPDIR)/BitVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BitVector.obj `cygpath -w $(utildir)/BitVector.cpp`

BitVector.lo: $(utildir)/BitVector.cpp
@AMDEP_TRUE@	source='$(utildir)/BitVector.cpp' object='BitVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/BitVector.Plo' tmpdepfile='$(DEPDIR)/BitVector.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BitVector.lo `test -f '$(utildir)/BitVector.cpp' || echo '$(srcdir)/'`$(utildir)/BitVector.cpp

Misc.o: $(utildir)/Misc.cpp
@AMDEP_TRUE@	source='$(utildir)/Misc.cpp' object='Misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Misc.Po' tmpdepfile='$(DEPDIR)/Misc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Misc.o `test -f '$(utildir)/Misc.cpp' || echo '$(srcdir)/'`$(utildir)/Misc.cpp

Misc.obj: $(utildir)/Misc.cpp
@AMDEP_TRUE@	source='$(utildir)/Misc.cpp' object='Misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Misc.Po' tmpdepfile='$(DEPDIR)/Misc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Misc.obj `cygpath -w $(utildir)/Misc.cpp`

Misc.lo: $(utildir)/Misc.cpp
@AMDEP_TRUE@	source='$(utildir)/Misc.cpp' object='Misc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Misc.Plo' tmpdepfile='$(DEPDIR)/Misc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Misc.lo `test -f '$(utildir)/Misc.cpp' || echo '$(srcdir)/'`$(utildir)/Misc.cpp

StringBuffer.o: $(utildir)/StringBuffer.cpp
@AMDEP_TRUE@	source='$(utildir)/StringBuffer.cpp' object='StringBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StringBuffer.Po' tmpdepfile='$(DEPDIR)/StringBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringBuffer.o `test -f '$(utildir)/StringBuffer.cpp' || echo '$(srcdir)/'`$(utildir)/StringBuffer.cpp

StringBuffer.obj: $(utildir)/StringBuffer.cpp
@AMDEP_TRUE@	source='$(utildir)/StringBuffer.cpp' object='StringBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StringBuffer.Po' tmpdepfile='$(DEPDIR)/StringBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringBuffer.obj `cygpath -w $(utildir)/StringBuffer.cpp`

StringBuffer.lo: $(utildir)/StringBuffer.cpp
@AMDEP_TRUE@	source='$(utildir)/StringBuffer.cpp' object='StringBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StringBuffer.Plo' tmpdepfile='$(DEPDIR)/StringBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringBuffer.lo `test -f '$(utildir)/StringBuffer.cpp' || echo '$(srcdir)/'`$(utildir)/StringBuffer.cpp

LuceneUTF8.o: $(lsrcdir)/LuceneUTF8.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/LuceneUTF8.cpp' object='LuceneUTF8.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LuceneUTF8.Po' tmpdepfile='$(DEPDIR)/LuceneUTF8.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LuceneUTF8.o `test -f '$(lsrcdir)/LuceneUTF8.cpp' || echo '$(srcdir)/'`$(lsrcdir)/LuceneUTF8.cpp

LuceneUTF8.obj: $(lsrcdir)/LuceneUTF8.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/LuceneUTF8.cpp' object='LuceneUTF8.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LuceneUTF8.Po' tmpdepfile='$(DEPDIR)/LuceneUTF8.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LuceneUTF8.obj `cygpath -w $(lsrcdir)/LuceneUTF8.cpp`

LuceneUTF8.lo: $(lsrcdir)/LuceneUTF8.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/LuceneUTF8.cpp' object='LuceneUTF8.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LuceneUTF8.Plo' tmpdepfile='$(DEPDIR)/LuceneUTF8.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LuceneUTF8.lo `test -f '$(lsrcdir)/LuceneUTF8.cpp' || echo '$(srcdir)/'`$(lsrcdir)/LuceneUTF8.cpp

StdHeader.o: $(lsrcdir)/StdHeader.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/StdHeader.cpp' object='StdHeader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StdHeader.Po' tmpdepfile='$(DEPDIR)/StdHeader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdHeader.o `test -f '$(lsrcdir)/StdHeader.cpp' || echo '$(srcdir)/'`$(lsrcdir)/StdHeader.cpp

StdHeader.obj: $(lsrcdir)/StdHeader.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/StdHeader.cpp' object='StdHeader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StdHeader.Po' tmpdepfile='$(DEPDIR)/StdHeader.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdHeader.obj `cygpath -w $(lsrcdir)/StdHeader.cpp`

StdHeader.lo: $(lsrcdir)/StdHeader.cpp
@AMDEP_TRUE@	source='$(lsrcdir)/StdHeader.cpp' object='StdHeader.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StdHeader.Plo' tmpdepfile='$(DEPDIR)/StdHeader.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdHeader.lo `test -f '$(lsrcdir)/StdHeader.cpp' || echo '$(srcdir)/'`$(lsrcdir)/StdHeader.cpp
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
anhHEADERS_INSTALL = $(INSTALL_HEADER)
install-anhHEADERS: $(anh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(anhdir)
	@list='$(anh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(anhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(anhdir)/$$f"; \
	  $(anhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(anhdir)/$$f; \
	done

uninstall-anhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(anh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(anhdir)/$$f"; \
	  rm -f $(DESTDIR)$(anhdir)/$$f; \
	done
debughHEADERS_INSTALL = $(INSTALL_HEADER)
install-debughHEADERS: $(debugh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(debughdir)
	@list='$(debugh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(debughHEADERS_INSTALL) $$d$$p $(DESTDIR)$(debughdir)/$$f"; \
	  $(debughHEADERS_INSTALL) $$d$$p $(DESTDIR)$(debughdir)/$$f; \
	done

uninstall-debughHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(debugh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(debughdir)/$$f"; \
	  rm -f $(DESTDIR)$(debughdir)/$$f; \
	done
dochHEADERS_INSTALL = $(INSTALL_HEADER)
install-dochHEADERS: $(doch_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(dochdir)
	@list='$(doch_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(dochHEADERS_INSTALL) $$d$$p $(DESTDIR)$(dochdir)/$$f"; \
	  $(dochHEADERS_INSTALL) $$d$$p $(DESTDIR)$(dochdir)/$$f; \
	done

uninstall-dochHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(doch_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(dochdir)/$$f"; \
	  rm -f $(DESTDIR)$(dochdir)/$$f; \
	done
includeHEADERS_INSTALL = $(INSTALL_HEADER)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done
indexhHEADERS_INSTALL = $(INSTALL_HEADER)
install-indexhHEADERS: $(indexh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(indexhdir)
	@list='$(indexh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(indexhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(indexhdir)/$$f"; \
	  $(indexhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(indexhdir)/$$f; \
	done

uninstall-indexhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(indexh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(indexhdir)/$$f"; \
	  rm -f $(DESTDIR)$(indexhdir)/$$f; \
	done
qphHEADERS_INSTALL = $(INSTALL_HEADER)
install-qphHEADERS: $(qph_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(qphdir)
	@list='$(qph_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(qphHEADERS_INSTALL) $$d$$p $(DESTDIR)$(qphdir)/$$f"; \
	  $(qphHEADERS_INSTALL) $$d$$p $(DESTDIR)$(qphdir)/$$f; \
	done

uninstall-qphHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(qph_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(qphdir)/$$f"; \
	  rm -f $(DESTDIR)$(qphdir)/$$f; \
	done
searchhHEADERS_INSTALL = $(INSTALL_HEADER)
install-searchhHEADERS: $(searchh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(searchhdir)
	@list='$(searchh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(searchhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(searchhdir)/$$f"; \
	  $(searchhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(searchhdir)/$$f; \
	done

uninstall-searchhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(searchh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(searchhdir)/$$f"; \
	  rm -f $(DESTDIR)$(searchhdir)/$$f; \
	done
stdanhHEADERS_INSTALL = $(INSTALL_HEADER)
install-stdanhHEADERS: $(stdanh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(stdanhdir)
	@list='$(stdanh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(stdanhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(stdanhdir)/$$f"; \
	  $(stdanhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(stdanhdir)/$$f; \
	done

uninstall-stdanhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(stdanh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(stdanhdir)/$$f"; \
	  rm -f $(DESTDIR)$(stdanhdir)/$$f; \
	done
stdhHEADERS_INSTALL = $(INSTALL_HEADER)
install-stdhHEADERS: $(stdh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(stdhdir)
	@list='$(stdh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(stdhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(stdhdir)/$$f"; \
	  $(stdhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(stdhdir)/$$f; \
	done

uninstall-stdhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(stdh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(stdhdir)/$$f"; \
	  rm -f $(DESTDIR)$(stdhdir)/$$f; \
	done
storehHEADERS_INSTALL = $(INSTALL_HEADER)
install-storehHEADERS: $(storeh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(storehdir)
	@list='$(storeh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(storehHEADERS_INSTALL) $$d$$p $(DESTDIR)$(storehdir)/$$f"; \
	  $(storehHEADERS_INSTALL) $$d$$p $(DESTDIR)$(storehdir)/$$f; \
	done

uninstall-storehHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(storeh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(storehdir)/$$f"; \
	  rm -f $(DESTDIR)$(storehdir)/$$f; \
	done
utilhHEADERS_INSTALL = $(INSTALL_HEADER)
install-utilhHEADERS: $(utilh_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(utilhdir)
	@list='$(utilh_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(utilhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(utilhdir)/$$f"; \
	  $(utilhHEADERS_INSTALL) $$d$$p $(DESTDIR)$(utilhdir)/$$f; \
	done

uninstall-utilhHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(utilh_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(utilhdir)/$$f"; \
	  rm -f $(DESTDIR)$(utilhdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(analyzersdir) $(distdir)/$(debugdir) $(distdir)/$(documentdir) $(distdir)/$(indexdir) $(distdir)/$(lsrcdir) $(distdir)/$(qpdir) $(distdir)/$(searchdir) $(distdir)/$(stdandir) $(distdir)/$(storedir) $(distdir)/$(top_builddir) $(distdir)/$(utildir)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(anhdir) $(DESTDIR)$(debughdir) $(DESTDIR)$(dochdir) $(DESTDIR)$(includedir) $(DESTDIR)$(indexhdir) $(DESTDIR)$(qphdir) $(DESTDIR)$(searchhdir) $(DESTDIR)$(stdanhdir) $(DESTDIR)$(stdhdir) $(DESTDIR)$(storehdir) $(DESTDIR)$(utilhdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-anhHEADERS install-debughHEADERS \
	install-dochHEADERS install-includeHEADERS \
	install-indexhHEADERS install-qphHEADERS install-searchhHEADERS \
	install-stdanhHEADERS install-stdhHEADERS install-storehHEADERS \
	install-utilhHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-anhHEADERS uninstall-debughHEADERS \
	uninstall-dochHEADERS uninstall-includeHEADERS \
	uninstall-indexhHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-qphHEADERS \
	uninstall-searchhHEADERS uninstall-stdanhHEADERS \
	uninstall-stdhHEADERS uninstall-storehHEADERS \
	uninstall-utilhHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-anhHEADERS install-data install-data-am \
	install-debughHEADERS install-dochHEADERS install-exec \
	install-exec-am install-includeHEADERS install-indexhHEADERS \
	install-info install-info-am install-libLTLIBRARIES install-man \
	install-qphHEADERS install-searchhHEADERS install-stdanhHEADERS \
	install-stdhHEADERS install-storehHEADERS install-strip \
	install-utilhHEADERS installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-anhHEADERS \
	uninstall-debughHEADERS uninstall-dochHEADERS \
	uninstall-includeHEADERS uninstall-indexhHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-qphHEADERS \
	uninstall-searchhHEADERS uninstall-stdanhHEADERS \
	uninstall-stdhHEADERS uninstall-storehHEADERS \
	uninstall-utilhHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
